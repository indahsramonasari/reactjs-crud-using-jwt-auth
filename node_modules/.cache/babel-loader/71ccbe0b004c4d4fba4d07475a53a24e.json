{"ast":null,"code":"var _jsxFileName = \"/Users/indahsramonasari/Documents/LEARN/react-jwt-auth/src/components/login.component.js\";\nimport React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"This field is required!\");\n  }\n};\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.login(this.state.username, this.state.password).then(() => {\n        this.props.history.push(\"/profile\");\n        window.location.reload();\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        this.setState({\n          loading: false,\n          message: resMessage\n        });\n      });\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n      alt: \"profile-img\",\n      className: \"profile-img-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Form, {\n      onSubmit: this.handleLogin,\n      ref: c => {\n        this.form = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Username\"), React.createElement(Input, {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.onChangeUsername,\n      validations: [required],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.onChangePassword,\n      validations: [required],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      disabled: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.state.loading && React.createElement(\"span\", {\n      className: \"spinner-border spinner-border-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Login\"))), React.createElement(CheckButton, {\n      style: {\n        display: \"none\"\n      },\n      ref: c => {\n        this.checkBtn = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/indahsramonasari/Documents/LEARN/react-jwt-auth/src/components/login.component.js"],"names":["React","Component","Form","Input","CheckButton","AuthService","required","value","Login","constructor","props","handleLogin","bind","onChangeUsername","onChangePassword","state","username","password","loading","message","e","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","login","then","history","push","window","location","reload","error","resMessage","response","data","toString","render","c","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.login(this.state.username, this.state.password).then(\n        () => {\n          this.props.history.push(\"/profile\");\n          window.location.reload();\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            loading: false,\n            message: resMessage\n          });\n        }\n      );\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" alt=\"profile-img\" className=\"profile-img-card\"/>\n\n          <Form onSubmit={this.handleLogin} ref={c => { this.form = c; }} >\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <Input type=\"text\" className=\"form-control\" name=\"username\" value={this.state.username} onChange={this.onChangeUsername} validations={[required]}/>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                validations={[required]}\n              />\n            </div>\n\n            <div class=\"d-flex justify-content-center\">\n              <button className=\"btn btn-primary\" disabled={this.state.loading}>\n                {this.state.loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>Login</span>\n              </button>\n            </div>\n\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}