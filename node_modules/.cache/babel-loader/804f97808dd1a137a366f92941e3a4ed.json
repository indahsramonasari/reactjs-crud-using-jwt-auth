{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIPRange;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isIP = _interopRequireDefault(require(\"./isIP\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar subnetMaybe = /^\\d{1,2}$/;\n\nfunction isIPRange(str) {\n  (0, _assertString.default)(str);\n  var parts = str.split('/'); // parts[0] -> ip, parts[1] -> subnet\n\n  if (parts.length !== 2) {\n    return false;\n  }\n\n  if (!subnetMaybe.test(parts[1])) {\n    return false;\n  } // Disallow preceding 0 i.e. 01, 02, ...\n\n\n  if (parts[1].length > 1 && parts[1].startsWith('0')) {\n    return false;\n  }\n\n  return (0, _isIP.default)(parts[0], 4) && parts[1] <= 32 && parts[1] >= 0;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"sources":["/Users/indahsramonasari/Documents/WIDYA/reactjs-crud-using-jwt-auth/node_modules/validator/lib/isIPRange.js"],"names":["Object","defineProperty","exports","value","default","isIPRange","_assertString","_interopRequireDefault","require","_isIP","obj","__esModule","subnetMaybe","str","parts","split","length","test","startsWith","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,SAAlB;;AAEA,IAAIC,aAAa,GAAGC,sBAAsB,CAACC,OAAO,CAAC,qBAAD,CAAR,CAA1C;;AAEA,IAAIC,KAAK,GAAGF,sBAAsB,CAACC,OAAO,CAAC,QAAD,CAAR,CAAlC;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEN,IAAAA,OAAO,EAAEM;AAAX,GAArC;AAAwD;;AAE/F,IAAIE,WAAW,GAAG,WAAlB;;AAEA,SAASP,SAAT,CAAmBQ,GAAnB,EAAwB;AACtB,GAAC,GAAGP,aAAa,CAACF,OAAlB,EAA2BS,GAA3B;AACA,MAAIC,KAAK,GAAGD,GAAG,CAACE,KAAJ,CAAU,GAAV,CAAZ,CAFsB,CAEM;;AAE5B,MAAID,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB;AACtB,WAAO,KAAP;AACD;;AAED,MAAI,CAACJ,WAAW,CAACK,IAAZ,CAAiBH,KAAK,CAAC,CAAD,CAAtB,CAAL,EAAiC;AAC/B,WAAO,KAAP;AACD,GAVqB,CAUpB;;;AAGF,MAAIA,KAAK,CAAC,CAAD,CAAL,CAASE,MAAT,GAAkB,CAAlB,IAAuBF,KAAK,CAAC,CAAD,CAAL,CAASI,UAAT,CAAoB,GAApB,CAA3B,EAAqD;AACnD,WAAO,KAAP;AACD;;AAED,SAAO,CAAC,GAAGT,KAAK,CAACL,OAAV,EAAmBU,KAAK,CAAC,CAAD,CAAxB,EAA6B,CAA7B,KAAmCA,KAAK,CAAC,CAAD,CAAL,IAAY,EAA/C,IAAqDA,KAAK,CAAC,CAAD,CAAL,IAAY,CAAxE;AACD;;AAEDK,MAAM,CAACjB,OAAP,GAAiBA,OAAO,CAACE,OAAzB;AACAe,MAAM,CAACjB,OAAP,CAAeE,OAAf,GAAyBF,OAAO,CAACE,OAAjC","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIPRange;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isIP = _interopRequireDefault(require(\"./isIP\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar subnetMaybe = /^\\d{1,2}$/;\n\nfunction isIPRange(str) {\n  (0, _assertString.default)(str);\n  var parts = str.split('/'); // parts[0] -> ip, parts[1] -> subnet\n\n  if (parts.length !== 2) {\n    return false;\n  }\n\n  if (!subnetMaybe.test(parts[1])) {\n    return false;\n  } // Disallow preceding 0 i.e. 01, 02, ...\n\n\n  if (parts[1].length > 1 && parts[1].startsWith('0')) {\n    return false;\n  }\n\n  return (0, _isIP.default)(parts[0], 4) && parts[1] <= 32 && parts[1] >= 0;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;"]},"metadata":{},"sourceType":"script"}