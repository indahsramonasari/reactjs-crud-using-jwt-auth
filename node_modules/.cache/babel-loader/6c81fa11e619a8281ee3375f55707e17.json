{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isURL;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isFQDN = _interopRequireDefault(require(\"./isFQDN\"));\n\nvar _isIP = _interopRequireDefault(require(\"./isIP\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/*\noptions for isURL method\n\nrequire_protocol - if set as true isURL will return false if protocol is not present in the URL\nrequire_valid_protocol - isURL will check if the URL's protocol is present in the protocols option\nprotocols - valid protocols can be modified with this option\nrequire_host - if set as false isURL will not check if host is present in the URL\nallow_protocol_relative_urls - if set as true protocol relative URLs will be allowed\n\n*/\n\n\nvar default_url_options = {\n  protocols: ['http', 'https', 'ftp'],\n  require_tld: true,\n  require_protocol: false,\n  require_host: true,\n  require_valid_protocol: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_protocol_relative_urls: false\n};\nvar wrapped_ipv6 = /^\\[([^\\]]+)\\](?::([0-9]+))?$/;\n\nfunction isRegExp(obj) {\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\n\nfunction checkHost(host, matches) {\n  for (var i = 0; i < matches.length; i++) {\n    var match = matches[i];\n\n    if (host === match || isRegExp(match) && match.test(host)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isURL(url, options) {\n  (0, _assertString.default)(url);\n\n  if (!url || url.length >= 2083 || /[\\s<>]/.test(url)) {\n    return false;\n  }\n\n  if (url.indexOf('mailto:') === 0) {\n    return false;\n  }\n\n  options = (0, _merge.default)(options, default_url_options);\n  var protocol, auth, host, hostname, port, port_str, split, ipv6;\n  split = url.split('#');\n  url = split.shift();\n  split = url.split('?');\n  url = split.shift();\n  split = url.split('://');\n\n  if (split.length > 1) {\n    protocol = split.shift().toLowerCase();\n\n    if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {\n      return false;\n    }\n  } else if (options.require_protocol) {\n    return false;\n  } else if (url.substr(0, 2) === '//') {\n    if (!options.allow_protocol_relative_urls) {\n      return false;\n    }\n\n    split[0] = url.substr(2);\n  }\n\n  url = split.join('://');\n\n  if (url === '') {\n    return false;\n  }\n\n  split = url.split('/');\n  url = split.shift();\n\n  if (url === '' && !options.require_host) {\n    return true;\n  }\n\n  split = url.split('@');\n\n  if (split.length > 1) {\n    if (options.disallow_auth) {\n      return false;\n    }\n\n    auth = split.shift();\n\n    if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {\n      return false;\n    }\n  }\n\n  hostname = split.join('@');\n  port_str = null;\n  ipv6 = null;\n  var ipv6_match = hostname.match(wrapped_ipv6);\n\n  if (ipv6_match) {\n    host = '';\n    ipv6 = ipv6_match[1];\n    port_str = ipv6_match[2] || null;\n  } else {\n    split = hostname.split(':');\n    host = split.shift();\n\n    if (split.length) {\n      port_str = split.join(':');\n    }\n  }\n\n  if (port_str !== null) {\n    port = parseInt(port_str, 10);\n\n    if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {\n      return false;\n    }\n  }\n\n  if (!(0, _isIP.default)(host) && !(0, _isFQDN.default)(host, options) && (!ipv6 || !(0, _isIP.default)(ipv6, 6))) {\n    return false;\n  }\n\n  host = host || ipv6;\n\n  if (options.host_whitelist && !checkHost(host, options.host_whitelist)) {\n    return false;\n  }\n\n  if (options.host_blacklist && checkHost(host, options.host_blacklist)) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"sources":["/Users/indahsramonasari/Documents/LEARN/react-jwt-auth/node_modules/validator/lib/isURL.js"],"names":["Object","defineProperty","exports","value","default","isURL","_assertString","_interopRequireDefault","require","_isFQDN","_isIP","_merge","obj","__esModule","default_url_options","protocols","require_tld","require_protocol","require_host","require_valid_protocol","allow_underscores","allow_trailing_dot","allow_protocol_relative_urls","wrapped_ipv6","isRegExp","prototype","toString","call","checkHost","host","matches","i","length","match","test","url","options","indexOf","protocol","auth","hostname","port","port_str","split","ipv6","shift","toLowerCase","substr","join","disallow_auth","ipv6_match","parseInt","host_whitelist","host_blacklist","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isURL;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isFQDN = _interopRequireDefault(require(\"./isFQDN\"));\n\nvar _isIP = _interopRequireDefault(require(\"./isIP\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\noptions for isURL method\n\nrequire_protocol - if set as true isURL will return false if protocol is not present in the URL\nrequire_valid_protocol - isURL will check if the URL's protocol is present in the protocols option\nprotocols - valid protocols can be modified with this option\nrequire_host - if set as false isURL will not check if host is present in the URL\nallow_protocol_relative_urls - if set as true protocol relative URLs will be allowed\n\n*/\nvar default_url_options = {\n  protocols: ['http', 'https', 'ftp'],\n  require_tld: true,\n  require_protocol: false,\n  require_host: true,\n  require_valid_protocol: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_protocol_relative_urls: false\n};\nvar wrapped_ipv6 = /^\\[([^\\]]+)\\](?::([0-9]+))?$/;\n\nfunction isRegExp(obj) {\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\n\nfunction checkHost(host, matches) {\n  for (var i = 0; i < matches.length; i++) {\n    var match = matches[i];\n\n    if (host === match || isRegExp(match) && match.test(host)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isURL(url, options) {\n  (0, _assertString.default)(url);\n\n  if (!url || url.length >= 2083 || /[\\s<>]/.test(url)) {\n    return false;\n  }\n\n  if (url.indexOf('mailto:') === 0) {\n    return false;\n  }\n\n  options = (0, _merge.default)(options, default_url_options);\n  var protocol, auth, host, hostname, port, port_str, split, ipv6;\n  split = url.split('#');\n  url = split.shift();\n  split = url.split('?');\n  url = split.shift();\n  split = url.split('://');\n\n  if (split.length > 1) {\n    protocol = split.shift().toLowerCase();\n\n    if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {\n      return false;\n    }\n  } else if (options.require_protocol) {\n    return false;\n  } else if (url.substr(0, 2) === '//') {\n    if (!options.allow_protocol_relative_urls) {\n      return false;\n    }\n\n    split[0] = url.substr(2);\n  }\n\n  url = split.join('://');\n\n  if (url === '') {\n    return false;\n  }\n\n  split = url.split('/');\n  url = split.shift();\n\n  if (url === '' && !options.require_host) {\n    return true;\n  }\n\n  split = url.split('@');\n\n  if (split.length > 1) {\n    if (options.disallow_auth) {\n      return false;\n    }\n\n    auth = split.shift();\n\n    if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {\n      return false;\n    }\n  }\n\n  hostname = split.join('@');\n  port_str = null;\n  ipv6 = null;\n  var ipv6_match = hostname.match(wrapped_ipv6);\n\n  if (ipv6_match) {\n    host = '';\n    ipv6 = ipv6_match[1];\n    port_str = ipv6_match[2] || null;\n  } else {\n    split = hostname.split(':');\n    host = split.shift();\n\n    if (split.length) {\n      port_str = split.join(':');\n    }\n  }\n\n  if (port_str !== null) {\n    port = parseInt(port_str, 10);\n\n    if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {\n      return false;\n    }\n  }\n\n  if (!(0, _isIP.default)(host) && !(0, _isFQDN.default)(host, options) && (!ipv6 || !(0, _isIP.default)(ipv6, 6))) {\n    return false;\n  }\n\n  host = host || ipv6;\n\n  if (options.host_whitelist && !checkHost(host, options.host_whitelist)) {\n    return false;\n  }\n\n  if (options.host_blacklist && checkHost(host, options.host_blacklist)) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;"]},"metadata":{},"sourceType":"script"}